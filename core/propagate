#!/bin/bash

cdir=/home/rh17/software/maper/maper-0.4.1/core
. "$cdir"/common
. "$cdir"/maper.rc

pn=$0
prog=$(basename "$pn")
comline="$cdir/$prog $*"

# parameters
srcop=
tgtop=
srctc3=
tgttc3=
spn="$cdir"/neutral.dof.gz
tpn="$cdir"/neutral.dof.gz
type=
isrcsegs=
outdir=
debugdir=
ensemblesize=1
while [ $# -gt 0 ]
do
    case "$1" in
        -source)               srcop="$2"; shift;;
	-target)               tgtop="$2"; shift;;
	-srctc3)              srctc3="$2"; shift;;
	-tgttc3)              tgttc3="$2"; shift;;
	-spn)                    spn="$2"; shift;;
	-tpn)                    tpn="$2"; shift;;
	-resultdir)        resultdir="$2"; shift ;;
	-type)                  type="$2"; shift;;
	-srcseg)            isrcsegs="$2 $isrcsegs"; shift;;
	-refseg)            irefsegs="$2 $irefsegs"; shift;;
	-ensemblesize)  ensemblesize="$2"; shift;;
	-output)              outdir="$2"; shift;;
	-debug)             debugdir="$2"; shift;;
	-basename)          basename="$2"; shift ;;
	--) shift; break;;
	-*)
	    echo >&2 \
		    "Usage: $0 -source source-onepad.nii.gz -target target-onepad.nii.gz -srctc3 source-tc3.nii.gz -tgttc3 target-tc3.nii.gz -spn source-posnorm.dof.gz -tpn target-posnorm.dof.gz -type [fast|standard|oldstandard|experimental] -srcseg source-segmentation-1.nii.gz [-srcseg sourceseg-2.nii.gz] [-refseg reference-segmentation-1.nii.gz] [-refseg reference-segmentation-2.nii.gz] -ensemblesize N -output directory -debug debug-directory"
    exit 1;;
*)  break;;# terminate while loop
    esac
    shift
done

srcop=$(normalpath "$srcop")
test -e "$srcop" || fatal "Source $srcop not found"
tgtop=$(normalpath "$tgtop")
test -e "$tgtop" || fatal "Target $tgtop not found"
srctc3=$(normalpath "$srctc3")
test -e "$srctc3" || fatal "Source tissue map $srctc3 not found"
tgttc3=$(normalpath "$tgttc3")
test -e "$tgttc3" || fatal "Target tissue map $tgttc3 not found"
spn=$(normalpath "$spn")
test -e "$spn" || fatal "Source posnorm $spn not found"
tpn=$(normalpath "$tpn")
test -e "$tpn" || fatal "Target posnorm $tpn not found"
resultdir=$(normalpath "$resultdir")
test -e "$resultdir" || fatal "Result destination dir $resultdir not found"
srcsegs=""
for i in $isrcsegs ; do
    test -e $i || fatal "Source seg $i does not exist"
    ii=$(normalpath $i)
    srcsegs="$srcsegs $ii"
done
[[ "$srcsegs" == "" ]] && fatal "Source segmentations not set"
refsegs=""
for i in $irefsegs ; do
    test -e $i || fatal "Reference seg $i does not exist"
    ii=$(normalpath $i)
    refsegs="$refsegs $ii"
done

[[ $ensemblesize =~ ^[0-9]+$ ]] || fatal "Invalid ensemblesize parameter $ensemblesize"

outdir=$(normalpath "$outdir")
test -e "$outdir" || mkdir -p "$outdir" || fatal "Creation of output directory $outdir failed" 
outdirbase=$(normalpath "$outdir"/..)

if ! [[ -e $debugdir ]] ; then
    debugdir=
    echo "Debug directory does not exist -- intermediate output will be discarded"
fi
debugdir=$(normalpath "$debugdir")

# paths irtk, nifty, temporary
: ${IRTK:="$irtk"}
: ${NIFTYREG:="$niftyreg"}
export PATH=$IRTK:$NIFTYREG:$PATH

td=$(tempdir)
if [[ -z "$debugdir" ]] ; then
    trap 'rm -rf $td >/dev/null 2>&1' 0 1 2 3 13 15
else
    trap 'cp -r $td $debugdir' 0 1 2 3 13 15
fi

cd "$td"
echo "$td"
echo "$comline" > commandline.log

# Before registration: pre-announce data coming to output directory
mkdir -p "$outdir"/log
for srcseg in $srcsegs ; do
    dn=$(dirname "$srcseg")
    bn=${dn##*/}
    echo "$bn" >$outdir/log/segtr-"$bn".pre
done

# Registration
"$cdir"/register -source "$srcop" -target "$tgtop" -srctc3 "$srctc3" -tgttc3 "$tgttc3" -spn "$spn" -tpn "$tpn" -trans "$PWD"/trans.nii.gz -type $type -debug "$PWD" >"$td"/register.log 2>&1 

# Transformation
echo $srcsegs

for srcseg in $srcsegs ; do
    dn=$(dirname "$srcseg")
    bn=${dn##*/}
    mkdir -p segtr-"$bn"
    echo "$cdir"/transform -target "$tgtop" -srcseg "$srcseg" -trans $PWD/trans.nii.gz -seg $PWD/segtr-"$bn" -debug $PWD
    "$cdir"/transform -target "$tgtop" -srcseg "$srcseg" -trans $PWD/trans.nii.gz -seg $PWD/segtr-"$bn" -debug $PWD
    mv $outdir/log/segtr-"$bn".pre $outdir/log/segtr-"$bn".rdy
done >>transformation.log 2>&1

# Comparison with reference segmentations
for refseg in $refsegs ; do
    dn=$(dirname "$refseg")
    bn=${dn##*/}
    test -e $PWD/segtr-"$bn" && labelStats "$refseg" $PWD/segtr-"$bn"/seg.nii.gz -q | cut -d , -f 1 >$PWD/segtr-"$bn"/jaccard.csv
done 2>comparison.err

cp -r segtr-* "$outdir"
mv "$outdir"/log/* "$outdir"/

echo "$cdir"/fusion -ensemblesize $ensemblesize -resultdir $resultdir -basename $basename "$outdirbase"
"$cdir"/fusion -ensemblesize $ensemblesize -resultdir $resultdir -basename $basename "$outdirbase" 2>&1 | tee fusion.log

# For debugging
[[ -z "$debugdir" ]] || cp -r "$td" "$debugdir"

exit 0
