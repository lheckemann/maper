#!/bin/bash

cdir=$(dirname "$0")
. "$cdir"/maper.rc
. "$cdir"/common
cdir=$(normalpath "$cdir")

pn=$0
comline="
$pn $*"
#prog=$(basename "$pn")

# parameters
srcop=
tgtop=
srctc3=
tgttc3=
spn="$cdir"/neutral.dof.gz
tpn="$cdir"/neutral.dof.gz
trans=
type="fast"
debugdir=
while [ $# -gt 0 ]
do
    case "$1" in
        -source)   srcop="$2"; shift;;
	-target)   tgtop="$2"; shift;;
	-srctc3)  srctc3="$2"; shift;;
	-tgttc3)  tgttc3="$2"; shift;;
	-spn)        spn="$2"; shift;;
	-tpn)        tpn="$2"; shift;;
	-trans)    trans="$2"; shift;;
	-type)      type="$2"; shift;;
	-debug) debugdir="$2"; shift;;
	--) shift; break;;
	-*)
	    echo >&2 \
		    "Usage: $0 -source source-onepad.nii.gz -target target-onepad.nii.gz -srctc3 source-tc3.nii.gz -tgttc3 target-tc3.nii.gz -spn source-posnorm.dof.gz -tpn target-posnorm.dof.gz -trans transformation.nii.gz -type [fast|standard|oldstandard|experimental]"
    exit 1;;
*)  break;;# terminate while loop
    esac
    shift
done

srcop=$(normalpath "$srcop")
test -e "$srcop" || fatal "Source $srcop not found"
tgtop=$(normalpath "$tgtop")
test -e "$tgtop" || fatal "Target $tgtop not found"
srctc3=$(normalpath "$srctc3")
test -e "$srctc3" || fatal "Source tissue map $srctc3 not found"
tgttc3=$(normalpath "$tgttc3")
test -e "$tgttc3" || fatal "Target tissue map $tgttc3 not found"
spn=$(normalpath "$spn")
test -e "$spn" || fatal "Source posnorm $spn not found"
tpn=$(normalpath "$tpn")
test -e "$tpn" || fatal "Target posnorm $spn not found"
trans=$(normalpath "$trans")
touch "$trans" || fatal "Transformation file $trans not writable"

if ! [[ -e $debugdir ]] ; then
    debugdir=
    echo "Debug directory does not exist -- intermediate output will be discarded"
fi
debugdir=$(normalpath "$debugdir")

# paths irtk, nifty, temporary
: ${IRTK:="$irtk"}
: ${NIFTYREG:="$niftyreg"}
export PATH=$IRTK:$NIFTYREG:$PATH

origwd="$PWD"
td=$(tempdir)
if [[ -z "$debugdir" ]] ; then
    trap 'rm -rf $td >/dev/null 2>&1' 0 1 2 3 13 15
else
    trap 'cp -r $td $debugdir' 0 1 2 3 13 15
fi

cd "$td"

echo "$comline" >commandline.log

case $type in

    fast)
	# Fast registration
	dofcombine "$spn" "$tpn" prealign.dof.gz -invert2
	dof2flirt prealign.dof.gz "$tgtop" "$srcop" flirt.raw
	cp "$srctc3" srctc3.nii.gz # -size 2 2 2
	cp "$tgttc3" tgttc3.nii.gz # -size 2 2 2
	reg_aladin -target "$tgtop" -source "$srcop" -aff flirt.raw -aff affine.txt -result mrtr-aff.nii.gz -speeeeed
	reg_f3d -target tgttc3.nii.gz -source srctc3.nii.gz --kld -ln 2 -sx 10 -aff affine.txt -cpp cpp-int.nii.gz -result mrtr-int.nii.gz
#	reg_f3d -target "$tgtop" -source "$srcop" -ln 1 -incpp cpp-int.nii.gz -cpp cpp-final.nii.gz -result mrtr-final.nii.gz
	cp cpp-int.nii.gz "$trans"
	;;

    oldfast)
	# Fast registration
	dofcombine "$spn" "$tpn" prealign.dof.gz -invert2
	dof2flirt prealign.dof.gz "$tgtop" "$srcop" flirt.raw
	cp "$srctc3" srctc3.nii.gz # -size 2 2 2
	cp "$tgttc3" tgttc3.nii.gz # -size 2 2 2
	reg_aladin -target "$tgtop" -source "$srcop" -aff flirt.raw -aff affine.txt -result mrtr-aff.nii.gz
	reg_f3d -target tgttc3.nii.gz -source srctc3.nii.gz -kld -ln 2 -sx 10 -aff affine.txt -cpp cpp-int.nii.gz -result mrtr-int.nii.gz
#	reg_f3d -target "$tgtop" -source "$srcop" -ln 1 -incpp cpp-int.nii.gz -cpp cpp-final.nii.gz -result mrtr-final.nii.gz
	cp cpp-int.nii.gz "$trans"
	;;

    standard)
	# Standard registration
	dofcombine "$spn" "$tpn" prealign.dof.gz -invert2
	dof2flirt prealign.dof.gz "$tgtop" "$srcop" flirt.raw
	cp "$srctc3" srctc3.nii.gz # -size 2 2 2
	cp "$tgttc3" tgttc3.nii.gz # -size 2 2 2
	reg_aladin -target "$tgtop" -source "$srcop" -inaff flirt.raw -aff affine.txt -result mrtr-aff.nii.gz
	reg_f3d -target tgttc3.nii.gz -source srctc3.nii.gz --kld -ln 2 -sx 10 -aff affine.txt -cpp cpp-int.nii.gz -result mrtr-int.nii.gz 
	reg_f3d -target "$tgtop" -source "$srcop" -ln 3 -incpp cpp-int.nii.gz -cpp cpp-final.nii.gz -result mrtr-final.nii.gz
	cp cpp-final.nii.gz "$trans"
	;;

    oldstandard)
	# Standard registration
	dofcombine "$spn" "$tpn" prealign.dof.gz -invert2
	dof2flirt prealign.dof.gz "$tgtop" "$srcop" flirt.raw
	cp "$srctc3" srctc3.nii.gz # -size 2 2 2
	cp "$tgttc3" tgttc3.nii.gz # -size 2 2 2
	reg_aladin -target "$tgtop" -source "$srcop" -affFlirt flirt.raw -aff affine.txt -result mrtr-aff.nii.gz
	reg_f3d -target tgttc3.nii.gz -source srctc3.nii.gz -kld -ln 2 -sx 10 -aff affine.txt -cpp cpp-int.nii.gz -result mrtr-int.nii.gz 
	reg_f3d -target "$tgtop" -source "$srcop" -ln 3 -incpp cpp-int.nii.gz -cpp cpp-final.nii.gz -result mrtr-final.nii.gz
	cp cpp-final.nii.gz "$trans"
	;;

    experimental)
	dofcombine "$spn" "$tpn" prealign.dof.gz -invert2
	cp "$srctc3" srctc3.nii.gz # -size 2 2 2
	cp "$tgttc3" tgttc3.nii.gz # -size 2 2 2
	rreg2 "$tgtop" "$srcop" -dofin prealign.dof.gz -dofout affine.dof.gz 
	dof2flirt affine.dof.gz "$tgtop" "$srcop" flirt.raw
	reg_f3d -target tgttc3.nii.gz -source srctc3.nii.gz --kld -ln 2 -sx 10 -aff flirt.raw -cpp cpp-int.nii.gz -result mrtr-int.nii.gz 
	reg_f3d -target "$tgtop" -source "$srcop" -ln 3 -incpp cpp-int.nii.gz -cpp cpp-final.nii.gz -result mrtr-final.nii.gz
	cp cpp-final.nii.gz "$trans"
	;;

    mirtk)
	mirtk invert-dof "$tpn" tpn-inverted.dof.gz
	mirtk concatenate-dofs "$spn" tpn-inverted.dof.gz prealign.dof.gz
	mirtk info prealign.dof.gz
	echo mirtk register "$tgtop" "$srcop" -model Rigid+Affine -dofin prealign.dof.gz -parout parameter-capture.txt -dofout affine.dof.gz
	mirtk register "$tgtop" "$srcop" -model Rigid+Affine -dofin prealign.dof.gz -parout parameter-capture.txt -dofout affine.dof.gz
	echo mirtk register "$tgttc3" "$srctc3" -model FFD -dofin prealign.dof.gz -parout parameter-capture.txt -dofout ffd-intermediate.dof.gz
	mirtk register "$tgttc3" "$srctc3" -model FFD -dofin prealign.dof.gz -parout parameter-capture.txt -dofout ffd-intermediate.dof.gz
	mirtk info ffd-intermediate.dof.gz
	cp affine.dof.gz "$trans"
	cp -r $td $trans/
	;;
    *)
	fatal "Registration type $type not implemented"
	;;

esac
    


exit 0
